<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">

    <!-- ur5 -->
    <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
    <xacro:include filename="$(find ur_description)/urdf/inc/ur_joint_control.xacro" />
    <xacro:include filename="$(find ur_robot_driver)/urdf/ur.ros2_control.xacro"/>

    <!-- force sensor-->
    <xacro:include filename="$(find prl_ur5_description)/urdf/_force_sensor.urdf.xacro"/>

    <!-- gripper -->
    <xacro:include filename="$(find prl_ur5_description)/urdf/_gripper.urdf.xacro"/>

    <!-- Macro to define the complete arm -->
    <xacro:macro name="arm" params="
        name:=ur
        ur_type:=ur5
        prefix
        parent
        pose
        sensor
        gripper
        gripper_pose
        joint_limits_parameters_file:='$(find ur_description)/config/ur5/joint_limits.yaml'
        kinematics_parameters_file:='$(find ur_description)/config/ur5/default_kinematics.yaml'
        hw_interface:=hardware_interface/PositionJointInterface
        physical_parameters_file:='$(find ur_description)/config/ur5/physical_parameters.yaml'
        visual_parameters_file:='$(find ur_description)/config/ur5/visual_parameters.yaml'
        safety_limits:=false
        safety_pos_margin:=0.15
        safety_k_position:=20
        gz_sim:=false
        headless_mode:=true 
        ur_output_recipe_filename:='$(find ur_robot_driver)/resources/rtde_output_recipe.txt'
        ur_input_recipe_filename:='$(find ur_robot_driver)/resources/rtde_input_recipe.txt'
        ur_script_filename:='$(find ur_client_library)/resources/external_control.urscript'
        network := ''
        ">

        <!-- UR5 -->
        <xacro:ur_robot
            name="${prefix}ur"
            tf_prefix="${prefix}"
            parent="${parent}"
            joint_limits_parameters_file="${joint_limits_parameters_file}"
            kinematics_parameters_file="${kinematics_parameters_file}"
            physical_parameters_file="${physical_parameters_file}"
            visual_parameters_file="${visual_parameters_file}"
            safety_limits="${safety_limits}"
            safety_pos_margin="${safety_pos_margin}"
            safety_k_position="${safety_k_position}"
            force_abs_paths="${gz_sim}"
        >
        <origin xyz="${pose['x']} ${pose['y']} ${pose['z']}" rpy="${pose['roll']} ${pose['pitch']} ${pose['yaw']}"/> 
        </xacro:ur_robot>  
        <!-- ROS2 control if simulation -->
        <xacro:if value="${gz_sim}">
            <ros2_control name="${prefix}ur" type="system">
                
                <hardware>
                    <plugin>gz_ros2_control/GazeboSimSystem</plugin>
                </hardware>

                <xacro:ur_joint_control_description
                    tf_prefix="${prefix}"
                    initial_positions="${dict(shoulder_pan_joint=0.0,shoulder_lift_joint=-1.57,elbow_joint=0.0,wrist_1_joint=-1.57,wrist_2_joint=0.0,wrist_3_joint=0.0)}"
                />
            </ros2_control>
        </xacro:if>
        <!-- ROS2 control if real robot -->
        <xacro:unless value="${gz_sim}">
            <xacro:ur_ros2_control
                name="${prefix}ur"
                tf_prefix="${prefix}"
                kinematics_parameters_file="${kinematics_parameters_file}"
                robot_ip="${network['ip']}"
                script_filename="${ur_script_filename}"
                output_recipe_filename="${ur_output_recipe_filename}"
                input_recipe_filename="${ur_input_recipe_filename}"
                use_mock_hardware="false"
                mock_sensor_commands="false"
                headless_mode="${headless_mode}"
                script_command_port="${network['script_command_port']}"
                reverse_port="${network['reverse_port']}"
                script_sender_port="${network['script_sender_port']}"
                trajectory_port="${network['trajectory_port']}"
            /> 
        </xacro:unless>

        <!-- Force sensor -->
        <xacro:force_sensor
            prefix="${prefix}"
            parent="tool0"
            gz_sim="${gz_sim}"
        />

        <!-- Tool frame -->
        <link name="${prefix}tool"/>

        <joint name="${prefix}tool_joint" type="fixed">
            <origin xyz="0 0 0" rpy="0 0 ${-pi}"/>
            <parent link="${prefix}robotiq_ft_frame_id"/>
            <child link="${prefix}tool"/>
        </joint>

        <!-- Gripper -->
        <xacro:gripper gripper="${gripper}" prefix='${prefix}' parent="${prefix}tool" pose="${gripper_pose}" hardware_interface="${hw_interface}" gz_sim="${gz_sim}"/>

        <!-- Right angle connector -->
        <link name="${prefix}wrist_connector_link">
        <visual>
            <geometry>
                <mesh filename="file://$(find prl_ur5_description)/model/RG_connector_simple.stl"/>

            </geometry>
            <material name="connector_green"><color rgba="0.2 0.8 0 1"/></material>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find prl_ur5_description)/model/RG_connector_simple_convex.stl"/>
            </geometry>
        </collision>
        </link>
        <joint name="${prefix}wrist_connector" type="fixed">
        <origin xyz="0 -0.0375 -0.02" rpy="1.5708 0 0"/>
        <parent link="${prefix}wrist_3_link"/>
        <child link="${prefix}wrist_connector_link"/>
        </joint>


    </xacro:macro>
 
</robot>

